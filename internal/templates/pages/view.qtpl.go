// Code generated by qtc from "view.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line ../templates/pages/view.qtpl:1
package pages

//line ../templates/pages/view.qtpl:1
import "cms/internal/models"

//line ../templates/pages/view.qtpl:2
import "cms/internal/templates/layouts"

//line ../templates/pages/view.qtpl:3
import "strings"

//line ../templates/pages/view.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line ../templates/pages/view.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line ../templates/pages/view.qtpl:6
// ViewData struct is defined in models package
type ViewData = models.ViewData

//line ../templates/pages/view.qtpl:10
func StreamViewPage(qw422016 *qt422016.Writer, data *ViewData) {
//line ../templates/pages/view.qtpl:10
	qw422016.N().S(`
    `)
//line ../templates/pages/view.qtpl:12
	pageContent := func() string {
		var sb strings.Builder
		sb.WriteString(`<article class="prose dark:prose-invert prose-indigo lg:prose-lg mx-auto bg-white dark:bg-gray-800 p-6 md:p-8 rounded-lg shadow-md">
                <h1>`)
		sb.WriteString(data.Item.Title)
		sb.WriteString(`</h1>
                <p class="text-sm text-gray-500 dark:text-gray-400">Status: `)
		// Add badge styling for status
		statusClass := "bg-gray-100 text-gray-800 dark:bg-gray-600 dark:text-gray-200"
		if data.Item.Status == "published" {
			statusClass = "bg-green-100 text-green-800 dark:bg-green-700 dark:text-green-100"
		}
		sb.WriteString(`<span class="inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset ring-gray-500/10 dark:ring-gray-400/20 `)
		sb.WriteString(statusClass)
		sb.WriteString(`">`)
		sb.WriteString(data.Item.Status)
		sb.WriteString(`</span>, Last Updated: `)
		sb.WriteString(data.Item.UpdatedAt.Format("January 2, 2006"))
		sb.WriteString(`</p>
                
                <div class="mt-6">
                    <!-- WARNING: Assuming data.Item.Content is safe HTML. Sanitize if necessary! -->
                    `)
		// Use WriteString to append the potentially unsafe HTML content
		sb.WriteString(data.Item.Content)
		sb.WriteString(`
                </div>
                
                <div class="mt-8 border-t border-gray-200 dark:border-gray-700 pt-6 flex items-center space-x-4">
                    <a href="/content/`)
		sb.WriteString(data.Item.ID)
		sb.WriteString(`/edit" class="text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300">Edit this item</a>
                    <a href="/content" class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-200">Back to list</a>
                </div>
            </article>`)
		return sb.String()
	}

//line ../templates/pages/view.qtpl:49
	qw422016.N().S(`
    `)
//line ../templates/pages/view.qtpl:50
	qw422016.N().S(layouts.BaseLayout(data, pageContent))
//line ../templates/pages/view.qtpl:50
	qw422016.N().S(`
`)
//line ../templates/pages/view.qtpl:51
}

//line ../templates/pages/view.qtpl:51
func WriteViewPage(qq422016 qtio422016.Writer, data *ViewData) {
//line ../templates/pages/view.qtpl:51
	qw422016 := qt422016.AcquireWriter(qq422016)
//line ../templates/pages/view.qtpl:51
	StreamViewPage(qw422016, data)
//line ../templates/pages/view.qtpl:51
	qt422016.ReleaseWriter(qw422016)
//line ../templates/pages/view.qtpl:51
}

//line ../templates/pages/view.qtpl:51
func ViewPage(data *ViewData) string {
//line ../templates/pages/view.qtpl:51
	qb422016 := qt422016.AcquireByteBuffer()
//line ../templates/pages/view.qtpl:51
	WriteViewPage(qb422016, data)
//line ../templates/pages/view.qtpl:51
	qs422016 := string(qb422016.B)
//line ../templates/pages/view.qtpl:51
	qt422016.ReleaseByteBuffer(qb422016)
//line ../templates/pages/view.qtpl:51
	return qs422016
//line ../templates/pages/view.qtpl:51
}
