{% import "cms/internal/models" %}
{% import "cms/internal/templates/layouts" %}
{% import "strings" %}

{% code
    // ListData struct is defined in models package
    type ListData = models.ListData
%}

{% func ListPage(data *ListData) %}
    {% code
        pageContent := func() string {
            var sb strings.Builder
            sb.WriteString(`<div class="px-4 sm:px-6 lg:px-8">
                <div class="sm:flex sm:items-center">
                    <div class="sm:flex-auto">
                        <h1 class="text-2xl font-semibold leading-6 text-gray-900 dark:text-white">Content Items</h1>
                        <p class="mt-2 text-sm text-gray-700 dark:text-gray-300">A list of all the content items in the database.</p>
                    </div>
                    <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
                        <a href="/content/new" class="block rounded-md bg-indigo-600 px-4 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 dark:bg-indigo-500 dark:hover:bg-indigo-400">Add Content</a>
                    </div>
                </div>
                <div class="mt-8 flow-root">
                    <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                        <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
                            <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 dark:ring-white dark:ring-opacity-10 sm:rounded-lg">
                                <table class="min-w-full divide-y divide-gray-300 dark:divide-gray-700">
                                    <thead class="bg-gray-50 dark:bg-gray-700">
                                        <tr>
                                            <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100 sm:pl-6">Title</th>
                                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Status</th>
                                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Updated At</th>
                                            <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
                                                <span class="sr-only">Edit</span>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody class="divide-y divide-gray-200 dark:divide-gray-700 bg-white dark:bg-gray-800">
            `)

            if len(data.Items) == 0 {
                sb.WriteString(`<tr><td colspan="4" class="whitespace-nowrap py-4 pl-4 pr-3 text-sm text-gray-500 dark:text-gray-400 sm:pl-6">No content items found.</td></tr>`)
            } else {
                for _, item := range data.Items {
                    sb.WriteString(`<tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 dark:text-gray-100 sm:pl-6"><a href="/content/`)
                    sb.WriteString(item.ID)
                    sb.WriteString(`" class="text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300">`)
                    sb.WriteString(item.Title)
                    sb.WriteString(`</a></td>
                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-400">`)
                    // Add badge styling for status
                    statusClass := "bg-gray-100 text-gray-800 dark:bg-gray-600 dark:text-gray-200"
                    if item.Status == "published" {
                        statusClass = "bg-green-100 text-green-800 dark:bg-green-700 dark:text-green-100"
                    }
                    sb.WriteString(`<span class="inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset ring-gray-500/10 dark:ring-gray-400/20 `)
                    sb.WriteString(statusClass)
                    sb.WriteString(`">`)
                    sb.WriteString(item.Status)
                    sb.WriteString(`</span></td>
                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-400">`)
                    sb.WriteString(item.UpdatedAt.Format("2006-01-02 15:04"))
                    sb.WriteString(`</td>
                        <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                            <a href="/content/`)
                    sb.WriteString(item.ID)
                    sb.WriteString(`/edit" class="text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300">Edit<span class="sr-only">, `)
                    sb.WriteString(item.Title)
                    sb.WriteString(`</span></a>
                        </td>
                    </tr>`)
                }
            }

            sb.WriteString(`
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>`)
            return sb.String()
        }
    %}
    {%s= layouts.BaseLayout(data, pageContent) %}
{% endfunc %} 